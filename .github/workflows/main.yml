name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write   # nÃ©cessaire pour OIDC
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          # Trim variables
          ECR_REGISTRY=$(echo "$ECR_REGISTRY" | xargs)
          ECR_REPOSITORY=$(echo "$ECR_REPOSITORY" | xargs)
          IMAGE_TAG=$(echo "$IMAGE_TAG" | xargs)

          if [ -z "$ECR_REGISTRY" ] || [ -z "$ECR_REPOSITORY" ]; then
            echo "Error: ECR registry or repository not set"
            exit 1
          fi

          FULL_IMAGE_NAME="${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
          echo "Full image name: $FULL_IMAGE_NAME"

          docker build -t "${FULL_IMAGE_NAME}" .
          docker push "${FULL_IMAGE_NAME}"

          echo "image=${FULL_IMAGE_NAME}" >> $GITHUB_OUTPUT

  continuous-deployment:
    needs: build-and-push-ecr-image
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull latest image
        run: |
          docker pull ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      - name: Stop and remove running container
        run: |
          if [ "$(docker ps -q -f name=projetprevision)" ]; then
            docker stop projetprevision && docker rm -fv projetprevision
          fi

      - name: Run Docker Image
        run: |
          docker run -d -p 8080:8080 --ipc="host" --name=projetprevision \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      - name: Clean previous images
        run: docker system prune -f
